>> createdb defoe
>> psql defoe


CREATE TABLE publication_page (
   id                SERIAL,         --publication_page id ; auto-increment when empty
   title             varchar(80),    --publication_page title
   edition           varchar(80),    --publication_page edition
   year              int,            --publication_page year
   place             varchar(80),    --publication_page
   archive_filename  varchar(80),    --publication_page archive directory name
   page_filename     varchar(80),    --publication_page page filename
   page_id           varchar(80),    --publication_page id of the page
   num_pages         int,            --publication_page number of pages of the archive
   type_archive      varchar(80),     --publication type (e.g. book, newpspaer)
   model             varchar(80),    --publication_page model (e.g. nls, alto)
   preprocess        varchar(80),    --publication_page preprocess treatment
   page_string       text,           --publication_page preprocessed|raw page as string
   num_page_words    text            --publication_page num words per page
);

defoe=# \d+ publication_page
 Column      |         Type          | Collation | Nullable |                   Default                    | Storage  | Stats target | Description 
------------------+-----------------------+-----------+----------+----------------------------------------------+----------+--------------+-------------
 id               | integer               |           | not null | nextval('publication_page_id_seq'::regclass) | plain    |              | 
 title            | character varying(80) |           |          |                                              | extended |              | 
 edition          | character varying(80) |           |          |                                              | extended |              | 
 year             | integer               |           |          |                                              | plain    |              | 
 place            | character varying(80) |           |          |                                              | extended |              | 
 archive_filename | character varying(80) |           |          |                                              | extended |              | 
 page_filename    | character varying(80) |           |          |                                              | extended |              | 
 page_id          | character varying(80) |           |          |                                              | extended |              | 
 num_pages        | integer               |           |          |                                              | plain    |              | 
 type_archive     | character varying(80) |           |          |                                              | extended |              | 
 model            | character varying(80) |           |          |                                              | extended |              | 
 preprocess       | character varying(80) |           |          |                                              | extended |              | 
 page_string      | text                  |           |          |                                              | extended |              | 




INSERT INTO publication_page (title, edition, year, place, archive_filename, page_filename, page_id, num_pages, type_archive, model, preprocess, page_string) VALUES ('Encyclopaedia Britannica', 'Seventh edition, Volume 13, LAB-Magnetism', 1842, 'Edinburgh', '/mnt/lustre/at003/at003/rfilguei2/nls-data-encyclopaediaBritannica/193108323', 'alto/193201394.34.xml', 'Page9', 810, 'book','nls','PreprocessWordType.NONE','THE ENCYCLOPAEDIA BRITANNICA DICTIONARY OF ARTS, SCIENCES, AND GENERAL LITERATURE. SEVENTH EDITION, i WITH PRELIMINARY DISSERTATIONS ON THE HISTORY OF THE SCIENCES, AND OTHER EXTENSIVE IMPROVEMENTS AND ADDITIONS; INCLUDING THE LATE SUPPLEMENT. A GENERAL INDEX, AND NUMEROUS ENGRAVINGS. VOLUME XIII. ADAM AND CHARLES BLACK, EDINBURGH; M.DCCC.XLII.');

\q


Check the ports:
# netstat -tnlpa | grep 5432
# ps -ef | grep postgres


Download the driver from: https://jdbc.postgresql.org/download.html

pyspark --jars postgresql-42.2.8.jar 
pyspark --driver-class-path postgresql-42.2.8.jar --jars postgresql-42.2.8.jar
from pyspark.sql import DataFrameReader

>>> from pyspark.sql import DataFrameReader
>>> url = 'postgresql://localhost:5432/dbtest'
>>> properties = {'user': 'rfilguei2', 'driver': 'org.postgresql.Driver'}
>>> df = DataFrameReader(sqlContext).jdbc(url='jdbc:%s' % url, table='tabla' , properties=properties)


Another method:
jdbcDF = spark.read \
    .format("jdbc") \
    .option("url", "jdbc:postgresql:dbtest") \
    .option("dbtable", "tabla") \
    .option("user", "rfilguei2") \
    .load()
